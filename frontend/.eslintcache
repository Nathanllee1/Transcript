[{"/home/nathanlee/Workspace/transcode2/frontend/src/App.js":"1","/home/nathanlee/Workspace/transcode2/frontend/src/slide.js":"2"},{"size":4717,"mtime":1607998609377,"results":"3","hashOfConfig":"4"},{"size":589,"mtime":1607998534521,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1lxuw92",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nathanlee/Workspace/transcode2/frontend/src/App.js",["10","11","12","13","14","15"],"/home/nathanlee/Workspace/transcode2/frontend/src/slide.js",["16","17"],{"ruleId":"18","severity":1,"message":"19","line":10,"column":8,"nodeType":"20","messageId":"21","endLine":10,"endColumn":20},{"ruleId":"22","severity":1,"message":"23","line":30,"column":15,"nodeType":"24","endLine":30,"endColumn":49},{"ruleId":"18","severity":1,"message":"25","line":58,"column":11,"nodeType":"20","messageId":"21","endLine":58,"endColumn":15},{"ruleId":"18","severity":1,"message":"26","line":65,"column":13,"nodeType":"20","messageId":"21","endLine":65,"endColumn":21},{"ruleId":"27","severity":1,"message":"28","line":73,"column":20,"nodeType":"29","messageId":"30","endLine":73,"endColumn":124},{"ruleId":"18","severity":1,"message":"31","line":103,"column":9,"nodeType":"20","messageId":"21","endLine":103,"endColumn":13},{"ruleId":"18","severity":1,"message":"32","line":1,"column":27,"nodeType":"20","messageId":"21","endLine":1,"endColumn":36},{"ruleId":"18","severity":1,"message":"33","line":6,"column":16,"nodeType":"20","messageId":"21","endLine":6,"endColumn":23},"no-unused-vars","'LoadingSlide' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'context' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'time' is assigned a value but never used.","'nexttime' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'audUrl', 'vidUrl', 'i', 'i'.","ArrowFunctionExpression","unsafeRefs","'diff' is assigned a value but never used.","'useEffect' is defined but never used.","'setText' is assigned a value but never used."]